# google login
spring.security.oauth2.client.registration.google.client-id=107021188543-7v1mu3444ugeq9v8cgee816dfmsncbhi.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email


# naver login
spring.security.oauth2.client.registration.naver.client-id=hILA3hU1g3F9WO01uYyY
spring.security.oauth2.client.registration.naver.client-secret=BIVAuEYaBn
# localhost:8080/login/oauth2/code/naver (스프링 시큐리티에서 기본제공하는 형태)
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
spring.security.oauth2.client.registration.naver.client-name=naver

# 네이버 로그인 인증 요청 uri
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
# 네이버 접근 토큰의 발급,갱신,삭제 요청 uri
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
# 네이버 회원의 프로필을 조회 uri
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
# 기준의 되는 user-name-attribute 의 이름을 response로 등록
# 실제 유저 키깂은 reponse.id 이지만 스프링 시큐리티에서는 하위필드를 명시 할 수 없으므로, 상위필드인 response라고 명시
spring.security.oauth2.client.provider.naver.user-name-attribute=response


#kakao login
spring.security.oauth2.client.registration.kakao.client-id=65285c36ddd7203a5aaa369ea0ecd6c2
# localhost:8080/login/oauth2/code/kakao (스프링 시큐리티에서 기본제공하는 형태)
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,profile_image,account_email
spring.security.oauth2.client.registration.kakao.client-name=kakao
#kakao의 경우 별도로 추가해줘야함.
spring.security.oauth2.client.registration.kakao.client-authentication-method=POST

# 카카오 로그인 인증 요청 uri
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
# 카카오 접근 토큰의 발급,갱신,삭제 요청 uri
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
# 카카오 회원의 프로필을 조회 uri
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
# 카카오 회원정보 조회 응답 json 형태 확인하여 pk키값 필드 입
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

