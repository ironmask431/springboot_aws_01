buildscript{
    //ext : build.gradle 에서 사용할 전역변수
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }
    //라이브러리들을 어떤 원격저장소에 받을지 설정
    repositories {
        mavenCentral() //기본
    }
    //dependency : 라이브러리 설정
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

//java와 springBoot를 사용하기 위한 필수 플러그인 4가지
apply plugin : 'java'
apply plugin : 'eclipse'
apply plugin : 'org.springframework.boot'
apply plugin : 'io.spring.dependency-management' //스프링부트의 라이브러리을 관리해주는 플러그인

group 'com.jojodu.book'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8


repositories {
    mavenCentral()
}

//개발에 필요한 라이브러리
//라이브러리 버전을 명시하지 않아야 상단에 설정한 ${springBootVersion} 버전을 따라가게됨.
//gradle 버전 7 이상버전에서는 compile()과 testCompile() 대신 implementation()과 testImplementation() 을 사용해야함.
dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    testImplementation('org.springframework.boot:spring-boot-starter-test')

    //lombok 추가
    implementation('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')

    //springboot용 spring data jpa 추상화 라이브러리
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    //인메모리 관계형 데이터베이스, 별도의 설치없이 사용가능한 db, 애플리케이션 재시작마다 초기화
    implementation('com.h2database:h2')

    //mustache 추가
    implementation('org.springframework.boot:spring-boot-starter-mustache')

    //dev-tools추가
    implementation('org.springframework.boot:spring-boot-devtools')

    //oauth 추가
    implementation('org.springframework.boot:spring-boot-starter-oauth2-client')
}